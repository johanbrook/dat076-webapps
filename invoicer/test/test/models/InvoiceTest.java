/**
*	InvoiceTest.java
*
*	@author Johan Brook
*	@copyright (c) 2013 Johan Brook
*	@license MIT
*/

package test.models;

import static org.junit.Assert.*;

import java.util.Date;

import models.Invoice;

import org.junit.Before;
import org.junit.Test;

import test.BaseTest;

public class InvoiceTest extends BaseTest {
	
	private Invoice invoice;

	@Before
	public void setUp() throws Exception {
		this.invoice = Invoice.find.where().eq("title", "Test invoice").findUnique();
	}

	@Test
	public void testRetrieveInvoice() {
		assertNotNull(this.invoice);
		assertNotNull(this.invoice.id);
	}
	
	@Test
	public void testCreateInvoice() {
		Invoice i = new Invoice();
		i.save();
		assertNotNull(i.id);
	}
	
	@Test
	public void testDeleteInvoice() {
		this.invoice.delete();
		assertNull(Invoice.find.where().eq("title", "Test invoice").findUnique());
	}
	
	@Test
	public void testInvoiceShouldHaveOwner() {
		assertNotNull(this.invoice.owner);
	}
	
	@Test
	public void testInvoiceShouldAutoGenerateDate() {
		Invoice i = new Invoice();
		i.save();
		assertNotNull(i.invoiceDate);
	}
	
	@Test
	public void testInvoiceShouldBePaidOnTime() {
		Invoice i = Invoice.find.where().eq("title", "Invoice was paid on time").findUnique();
		Invoice i2 = Invoice.find.where().eq("title", "Invoice was not paid on time").findUnique();
		
		assertNotNull(i);
		assertNotNull(i2);
		
		assertTrue(i.isPaid());
		assertTrue(i.wasPaidOnTime());
		
		assertTrue(i.isPaid());
		assertFalse(i.wasPaidOnTime());
	}

}
